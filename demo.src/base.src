CONSTANT title "Forest of the Gnoll";
CONSTANT version "Alpha-1";
CONSTANT byline "Gren Drake, 2017";

// constants that are used to refer to storage locations
CONSTANT flg-took-key 0;
CONSTANT flg-rescued-gnoll 1;
CONSTANT flg-talked-to-caged-gnoll 2;
CONSTANT flg-visited-gnoll 3;

CONSTANT forest-events 77;

/* ************************************************************************* *
 * GENERAL DEFINITIONS                                                       *
 * ************************************************************************* */

// constants for species flag definitions
SPECIES spc-human {
    name "human";
    is-biped true;
}

SPECIES spc-gnoll {
    name "gnoll";
    is-biped true;
    has-snout true;
}

SPECIES spc-dragon {
    name "dragon";
    is-quad true;
    has-snout true;
}

SEX sex-male {
    name "male";
    subject "he";        // subject  : _he_ ate dinner
    object "him";        // object   : dinner ate _him_
    possessive "his";    // possess  : the dinner was _his_
    adjective "his";     // adject   : it's _his_ dinner
    reflexive "himself"; // reflex   : he ate _himself_
}

SEX sex-female {
    name "female";
    subject "she";
    object "her";
    possessive "hers";
    adjective "her";
    reflexive "herself";
}

SEX sex-neuter {
    name "neuter";
    subject "it";
    object "it";
    possessive "its";
    adjective "its";
    reflexive "itself";
}

CONSTANT skl-variable       0x01; // variable stat (like health, energy, mana, corruption, etc.)
CONSTANT skl-ko-0           0x02; // KO character if reaches 0
CONSTANT skl-ko-full        0x04; // KO character is becomes full
CONSTANT skl-reset-on-rest  0x08; // current skill value is reset when character rests
CONSTANT skl-x5             0x10; // multiply (max) value of skill by 5 for final value
CONSTANT skl-on-tracker     0x20; // display skill on combat tracker

//    iname             stat            dname            default  recovery  flags
SKILL skl-strength      0               "strength"       10;
SKILL skl-dexterity     0               "dexterity"      10;
SKILL skl-toughness     0               "toughness"      10; // consitution
SKILL skl-knowledge     0               "knowledge"      10;
SKILL skl-spirit        0               "spirit"         10; // wisdom
SKILL skl-unarmed       skl-strength    "unarmed combat" 0;
SKILL skl-melee         skl-strength    "melee combat"   0;
SKILL skl-ranged        skl-dexterity   "ranged combat"  0;
SKILL skl-thievery      skl-dexterity   "thievery"       0;
SKILL skl-persuasion    skl-spirit      "persuasion"     0;
SKILL skl-black-magic   skl-knowledge   "black magic"    0;
SKILL skl-holy-magic    skl-knowledge   "holy magic"     0;
SKILL skl-void-magic    skl-knowledge   "void magic"     0;
SKILL skl-health        0               "health"         5   250  ( skl-variable skl-ko-0 skl-reset-on-rest skl-x5 skl-on-tracker );
SKILL skl-energy        0               "energy"         2   1000 ( skl-variable skl-reset-on-rest skl-x5 skl-on-tracker );
SKILL skl-void          0               "void-touched"   10  75   ( skl-variable skl-ko-full skl-on-tracker );

DAMAGE-TYPES {
    dt-blunt   "blunt"
    dt-cutting "cutting"
    dt-piercing "piercing"
    dt-fire "fire"
    dt-air "air"
    dt-earth "earth"
    dt-water "water"
    dt-void "void"
}

/* ************************************************************************* *
 * GENERAL CHARACTER DEFINITIONS                                             *
 * ************************************************************************* */

CHARACTER the-player {
    article "the ";
    name "player";
    sex sex-neuter;
    species spc-human;
    faction 0;
    skills skillset(
        defaults;
        skl-strength 12;
        skl-toughness 14;
        skl-melee 4;
    );
    gear list(
        common-helmet
        common-sword
        loincloth
    );
    baseAbilities list(
        act-punch
    );
    extraAbilities list(
        act-fireball
    );
}

/* ************************************************************************* *
 * GENERAL ITEM DEFINITIONS                                                  *
 * ************************************************************************* */

ITEM common-sword {
    article "a ";
    name    "common sword";
    plural  "common swords";
    description "A perfectly ordinary sword.";
    slot    "weapon";
    can-equip {
        push true
    };
    on-equip {
    };
    on-remove {
    };
    action-list list(
        act-swing
        act-thrust
    );
}

ITEM common-helmet {
    article "a ";
    name    "common helmet";
    plural  "common helmets";
    slot    "head";
}
ITEM loincloth {
    article "a ";
    name    "loincloth";
    plural  "loincloths";
    slot    "body";
}
ITEM plate-armour {
    article "a ";
    name    "suit of plate armour";
    plural  "suits of plate armour";
    slot    "body";
    skills skillset(
        skl-strength 50;
        skl-dexterity -3;
    );
}

ITEM teleport-crystal {
    article "a ";
    name    "teleport crystal";
    plural  "teleport crystals";
    description "A crystal devised by Arnold of Va-Katr for the purpose of reaching the town quickly without the use of undue magic.";
    on-use {
        teleport-crystal 1 remove-items
        "Light flashes and you vision goes blank. Moments later, the world returns."
        say
        town-gate
        add-continue
    };
}

ITEM gnoll-potion {
    article "a ";
    name    "potion of gnoll";
    plural  "potions of gnoll";
    description "A potion of transformation intended to make one more gnoll-like.";
    on-use {
        gnoll-potion 1 remove-items
        add-return
        get-species the-player
        spc-gnoll already-gnoll jump-eq

        set-species the-player spc-gnoll
        "You feel your body twist and change under the influence of the potion. Moments later, you have the body of a gnoll."
        say
        end

        label already-gnoll
        "Nothing happens. Perhaps you can't become any more gnoll-like then you are?"
        say
    };
}

/* ************************************************************************* *
 * GENERAL SKILL DEFINITIONS                                                  *
 * ************************************************************************* */

ACTION act-punch {
    name "punch";
    combat-node { };
}

ACTION act-fireball {
    name "fireball";
    cost-skill skl-energy;
    cost-amount 2;
    combat-node {
        #_0 say-uf
        " uses fireball! KABOOM!\n" say
    };
}

ACTION act-swing {
    name "whirlwind";
    combat-node {
        #_0 say-uf " swings " say #_0 pro-adject say-pronoun " sword! " say

        _9 0 store
        _8 0 combatant store
        _7 #_0 $faction get-property store

        label swing-start
        // skip characters of the same faction
        #_8 $faction get-property #_7 skip-me jump-eq

        // do skill check
        "\n" say
        _0 fetch skl-melee 0 25 skill-check
        0 hit-missed jump-lt

        // a hit!
        #_8 say-uf " is hit! " say
        #_8 13 skl-health dt-cutting do-damage
        skip-me jump

        // missed!
        label hit-missed
        #_8 say-uf " avoids the strike! " say

        // done with this target
        label skip-me
        _9 #_9 increment store    // get next combatant
        _8 #_9 combatant store    // check if combatant valid
        #_8 swing-start jump-true // if so, restart loop
        "\n" say                  // otherwise, all done
    };
    peace-node {
        "You brandish the sword wildly." say
        add-return
    };
}

ACTION act-thrust {
    name "thrust";
    combat-node {
        #_0 $faction get-property
        random-not-faction
        say-uf
        " breaks into dance.\n" say
        #_0 $faction get-property
        random-of-faction
        say-uf
        " appluads loudly.\n" say
    };
    peace-node {
        "You brandish the sword wildly." say
        add-return
    };
}

/* ************************************************************************* *
 * BASE GAME NODES                                                           *
 * ************************************************************************* */

NODE start {
    "Welcome to the game!" say
    "Create a new character"
    chargen-sex
    add-option

    forest-event-setup
    do-node
}

NODE chargen-sex {
    "What sex is your character?" say
    "Male" chargen-species sex-male add-option-xtra
    "Female" chargen-species sex-female add-option-xtra
}

NODE chargen-species {
    the-player stk-swap set-sex
    "What species is your character?" say
    push "Human" chargen-done spc-human add-option-xtra
    push "Gnoll" chargen-done spc-gnoll add-option-xtra
    push "Dragon" chargen-done spc-dragon add-option-xtra
}

NODE chargen-done {
    the-player stk-swap set-species  // set player species
    the-player add-to-party
    the-gnoll add-to-party

    teleport-crystal 20 add-items
    gnoll-potion 2 add-items
    loincloth 1 add-items
    plate-armour 1 add-items

    "Beginning the game now.\n* * * * * * * * * *\n" say
    start-game
    forest-path
    do-node
}
